Terminaux inutilisés dans la grammaire

   NOM
   VRAI
   FAUX
   CASE
   TYPE
   PROC
   FUNC
   F_AVANCE
   F_DROITE
   F_GAUCHE
   FINTQ
   FINPROC
   FINFUNC
   INFEG
   SUPEG
   EGEG
   INF
   SUP


Grammaire

    0 $accept: json $end

    1 json: '{' lelems '}'

    2 lelems: elemjson ',' lelems
    3       | elemjson

    4 elemjson: LARGEUR ':' ENTIER
    5         | HAUTEUR ':' ENTIER
    6         | DEBUT ':' debutjson
    7         | CASES ':' tabcases

    8 debutjson: '{' X ':' ENTIER ',' Y ':' ENTIER ',' DIRECTION ':' direction '}'

    9 direction: BAS
   10          | HAUT
   11          | DROITE
   12          | GAUCHE

   13 tabcases: '[' cases ']'

   14 cases: scase ',' cases
   15      | scase

   16 scase: '{' X ':' ENTIER ',' Y ':' ENTIER ',' TYPEJSON ':' type '}'

   17 type: CAISSE
   18     | TROU
   19     | BILLE
   20     | BLOC


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
',' (44) 2 8 14 16
':' (58) 4 5 6 7 8 16
'[' (91) 13
']' (93) 13
'{' (123) 1 8 16
'}' (125) 1 8 16
error (256)
ENTIER (258) 4 5 8 16
NOM (259)
VRAI (260)
FAUX (261)
HAUTEUR (262) 5
LARGEUR (263) 4
X (264) 8 16
Y (265) 8 16
TYPEJSON (266) 16
BLOC (267) 20
BILLE (268) 19
CAISSE (269) 17
TROU (270) 18
CASE (271)
CASES (272) 7
DEBUT (273) 6
DIRECTION (274) 8
BAS (275) 9
HAUT (276) 10
DROITE (277) 11
GAUCHE (278) 12
TYPE (279)
PROC (280)
FUNC (281)
F_AVANCE (282)
F_DROITE (283)
F_GAUCHE (284)
FINTQ (285)
FINPROC (286)
FINFUNC (287)
INFEG (288)
SUPEG (289)
EGEG (290)
INF (291)
SUP (292)


Non-terminaux, suivis des règles où ils apparaissent

$accept (44)
    à gauche: 0
json (45)
    à gauche: 1, à droite: 0
lelems (46)
    à gauche: 2 3, à droite: 1 2
elemjson (47)
    à gauche: 4 5 6 7, à droite: 2 3
debutjson (48)
    à gauche: 8, à droite: 6
direction (49)
    à gauche: 9 10 11 12, à droite: 8
tabcases (50)
    à gauche: 13, à droite: 7
cases (51)
    à gauche: 14 15, à droite: 13 14
scase (52)
    à gauche: 16, à droite: 14 15
type (53)
    à gauche: 17 18 19 20, à droite: 16


État 0

    0 $accept: . json $end

    '{'  décalage et aller à l'état 1

    json  aller à l'état 2


État 1

    1 json: '{' . lelems '}'

    HAUTEUR  décalage et aller à l'état 3
    LARGEUR  décalage et aller à l'état 4
    CASES    décalage et aller à l'état 5
    DEBUT    décalage et aller à l'état 6

    lelems    aller à l'état 7
    elemjson  aller à l'état 8


État 2

    0 $accept: json . $end

    $end  décalage et aller à l'état 9


État 3

    5 elemjson: HAUTEUR . ':' ENTIER

    ':'  décalage et aller à l'état 10


État 4

    4 elemjson: LARGEUR . ':' ENTIER

    ':'  décalage et aller à l'état 11


État 5

    7 elemjson: CASES . ':' tabcases

    ':'  décalage et aller à l'état 12


État 6

    6 elemjson: DEBUT . ':' debutjson

    ':'  décalage et aller à l'état 13


État 7

    1 json: '{' lelems . '}'

    '}'  décalage et aller à l'état 14


État 8

    2 lelems: elemjson . ',' lelems
    3       | elemjson .

    ','  décalage et aller à l'état 15

    $défaut  réduction par utilisation de la règle 3 (lelems)


État 9

    0 $accept: json $end .

    $défaut  accepter


État 10

    5 elemjson: HAUTEUR ':' . ENTIER

    ENTIER  décalage et aller à l'état 16


État 11

    4 elemjson: LARGEUR ':' . ENTIER

    ENTIER  décalage et aller à l'état 17


État 12

    7 elemjson: CASES ':' . tabcases

    '['  décalage et aller à l'état 18

    tabcases  aller à l'état 19


État 13

    6 elemjson: DEBUT ':' . debutjson

    '{'  décalage et aller à l'état 20

    debutjson  aller à l'état 21


État 14

    1 json: '{' lelems '}' .

    $défaut  réduction par utilisation de la règle 1 (json)


État 15

    2 lelems: elemjson ',' . lelems

    HAUTEUR  décalage et aller à l'état 3
    LARGEUR  décalage et aller à l'état 4
    CASES    décalage et aller à l'état 5
    DEBUT    décalage et aller à l'état 6

    lelems    aller à l'état 22
    elemjson  aller à l'état 8


État 16

    5 elemjson: HAUTEUR ':' ENTIER .

    $défaut  réduction par utilisation de la règle 5 (elemjson)


État 17

    4 elemjson: LARGEUR ':' ENTIER .

    $défaut  réduction par utilisation de la règle 4 (elemjson)


État 18

   13 tabcases: '[' . cases ']'

    '{'  décalage et aller à l'état 23

    cases  aller à l'état 24
    scase  aller à l'état 25


État 19

    7 elemjson: CASES ':' tabcases .

    $défaut  réduction par utilisation de la règle 7 (elemjson)


État 20

    8 debutjson: '{' . X ':' ENTIER ',' Y ':' ENTIER ',' DIRECTION ':' direction '}'

    X  décalage et aller à l'état 26


État 21

    6 elemjson: DEBUT ':' debutjson .

    $défaut  réduction par utilisation de la règle 6 (elemjson)


État 22

    2 lelems: elemjson ',' lelems .

    $défaut  réduction par utilisation de la règle 2 (lelems)


État 23

   16 scase: '{' . X ':' ENTIER ',' Y ':' ENTIER ',' TYPEJSON ':' type '}'

    X  décalage et aller à l'état 27


État 24

   13 tabcases: '[' cases . ']'

    ']'  décalage et aller à l'état 28


État 25

   14 cases: scase . ',' cases
   15      | scase .

    ','  décalage et aller à l'état 29

    $défaut  réduction par utilisation de la règle 15 (cases)


État 26

    8 debutjson: '{' X . ':' ENTIER ',' Y ':' ENTIER ',' DIRECTION ':' direction '}'

    ':'  décalage et aller à l'état 30


État 27

   16 scase: '{' X . ':' ENTIER ',' Y ':' ENTIER ',' TYPEJSON ':' type '}'

    ':'  décalage et aller à l'état 31


État 28

   13 tabcases: '[' cases ']' .

    $défaut  réduction par utilisation de la règle 13 (tabcases)


État 29

   14 cases: scase ',' . cases

    '{'  décalage et aller à l'état 23

    cases  aller à l'état 32
    scase  aller à l'état 25


État 30

    8 debutjson: '{' X ':' . ENTIER ',' Y ':' ENTIER ',' DIRECTION ':' direction '}'

    ENTIER  décalage et aller à l'état 33


État 31

   16 scase: '{' X ':' . ENTIER ',' Y ':' ENTIER ',' TYPEJSON ':' type '}'

    ENTIER  décalage et aller à l'état 34


État 32

   14 cases: scase ',' cases .

    $défaut  réduction par utilisation de la règle 14 (cases)


État 33

    8 debutjson: '{' X ':' ENTIER . ',' Y ':' ENTIER ',' DIRECTION ':' direction '}'

    ','  décalage et aller à l'état 35


État 34

   16 scase: '{' X ':' ENTIER . ',' Y ':' ENTIER ',' TYPEJSON ':' type '}'

    ','  décalage et aller à l'état 36


État 35

    8 debutjson: '{' X ':' ENTIER ',' . Y ':' ENTIER ',' DIRECTION ':' direction '}'

    Y  décalage et aller à l'état 37


État 36

   16 scase: '{' X ':' ENTIER ',' . Y ':' ENTIER ',' TYPEJSON ':' type '}'

    Y  décalage et aller à l'état 38


État 37

    8 debutjson: '{' X ':' ENTIER ',' Y . ':' ENTIER ',' DIRECTION ':' direction '}'

    ':'  décalage et aller à l'état 39


État 38

   16 scase: '{' X ':' ENTIER ',' Y . ':' ENTIER ',' TYPEJSON ':' type '}'

    ':'  décalage et aller à l'état 40


État 39

    8 debutjson: '{' X ':' ENTIER ',' Y ':' . ENTIER ',' DIRECTION ':' direction '}'

    ENTIER  décalage et aller à l'état 41


État 40

   16 scase: '{' X ':' ENTIER ',' Y ':' . ENTIER ',' TYPEJSON ':' type '}'

    ENTIER  décalage et aller à l'état 42


État 41

    8 debutjson: '{' X ':' ENTIER ',' Y ':' ENTIER . ',' DIRECTION ':' direction '}'

    ','  décalage et aller à l'état 43


État 42

   16 scase: '{' X ':' ENTIER ',' Y ':' ENTIER . ',' TYPEJSON ':' type '}'

    ','  décalage et aller à l'état 44


État 43

    8 debutjson: '{' X ':' ENTIER ',' Y ':' ENTIER ',' . DIRECTION ':' direction '}'

    DIRECTION  décalage et aller à l'état 45


État 44

   16 scase: '{' X ':' ENTIER ',' Y ':' ENTIER ',' . TYPEJSON ':' type '}'

    TYPEJSON  décalage et aller à l'état 46


État 45

    8 debutjson: '{' X ':' ENTIER ',' Y ':' ENTIER ',' DIRECTION . ':' direction '}'

    ':'  décalage et aller à l'état 47


État 46

   16 scase: '{' X ':' ENTIER ',' Y ':' ENTIER ',' TYPEJSON . ':' type '}'

    ':'  décalage et aller à l'état 48


État 47

    8 debutjson: '{' X ':' ENTIER ',' Y ':' ENTIER ',' DIRECTION ':' . direction '}'

    BAS     décalage et aller à l'état 49
    HAUT    décalage et aller à l'état 50
    DROITE  décalage et aller à l'état 51
    GAUCHE  décalage et aller à l'état 52

    direction  aller à l'état 53


État 48

   16 scase: '{' X ':' ENTIER ',' Y ':' ENTIER ',' TYPEJSON ':' . type '}'

    BLOC    décalage et aller à l'état 54
    BILLE   décalage et aller à l'état 55
    CAISSE  décalage et aller à l'état 56
    TROU    décalage et aller à l'état 57

    type  aller à l'état 58


État 49

    9 direction: BAS .

    $défaut  réduction par utilisation de la règle 9 (direction)


État 50

   10 direction: HAUT .

    $défaut  réduction par utilisation de la règle 10 (direction)


État 51

   11 direction: DROITE .

    $défaut  réduction par utilisation de la règle 11 (direction)


État 52

   12 direction: GAUCHE .

    $défaut  réduction par utilisation de la règle 12 (direction)


État 53

    8 debutjson: '{' X ':' ENTIER ',' Y ':' ENTIER ',' DIRECTION ':' direction . '}'

    '}'  décalage et aller à l'état 59


État 54

   20 type: BLOC .

    $défaut  réduction par utilisation de la règle 20 (type)


État 55

   19 type: BILLE .

    $défaut  réduction par utilisation de la règle 19 (type)


État 56

   17 type: CAISSE .

    $défaut  réduction par utilisation de la règle 17 (type)


État 57

   18 type: TROU .

    $défaut  réduction par utilisation de la règle 18 (type)


État 58

   16 scase: '{' X ':' ENTIER ',' Y ':' ENTIER ',' TYPEJSON ':' type . '}'

    '}'  décalage et aller à l'état 60


État 59

    8 debutjson: '{' X ':' ENTIER ',' Y ':' ENTIER ',' DIRECTION ':' direction '}' .

    $défaut  réduction par utilisation de la règle 8 (debutjson)


État 60

   16 scase: '{' X ':' ENTIER ',' Y ':' ENTIER ',' TYPEJSON ':' type '}' .

    $défaut  réduction par utilisation de la règle 16 (scase)
